function distance(a,b){const aLen=a.length;const bLen=b.length;const distances=[];for(let i=0;i<=aLen;i++){distances[i]=[i]}for(let j=0;j<=bLen;j++){distances[0][j]=j}for(let i=1;i<=aLen;i++){for(let j=1;j<=bLen;j++){const cost=a[i-1]===b[j-1]?0:1;distances[i][j]=Math.min(distances[i-1][j]+1,distances[i][j-1]+1,distances[i-1][j-1]+cost)}}return distances[aLen][bLen]}function search(query,items,threshold=3){return items.map(item=>({item:item,distance:distance(query,item)})).filter(({distance})=>distance<=threshold).sort((a,b)=>a.distance-b.distance).map(({item})=>item)}export{search};